apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: smartgateways.smartgateway.infra.watch
spec:
  group: smartgateway.infra.watch
  names:
    kind: SmartGateway
    listKind: SmartGatewayList
    plural: smartgateways
    singular: smartgateway
  scope: Namespaced
  version: v2alpha1
  subresources:
    status: {}
  versions:
  - name: v2alpha1
    served: true
    storage: true
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        spec:
          description: 'SmartGatewaySpec is a specification of the desired behavior
            of the Smartgateway deployment. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
          properties:
            size:
              description: Size sets the number of replicas to create. Defaults to 1.
              type: integer
            amqpUrl:
              description: AMQP1.x listener example 127.0.0.1:5672/collectd/telemetry. Defaults to using
                'messaging-internal-<name>.<namespace>.src:5672/collectd/telemetry'.
              type: string
            amqpDataSource:
              description: The expected data source of the messages received from the address configured in amqpUrl. Available values include 'universal', 'collectd', and 'ceilometer'.
              type: string
            useBasicAuth:
              description: Whether to use basic authentication or not when connecting to ElasticSearch. Default is 'false'
              type: boolean
            elasticUrl:
              description: URL for ElasticSearch endpoing to connect when the Smart Gateway is operating as an 'events' service type.
                Defaults to 'elasticsearch-es-http.<namespace>.svc:9200'.
              type: string
            elasticUser:
              description: Basic Authentication username for ElasticSearch.
              type: string
            elasticPass:
              description: Basic Authentication password for ElasticSearch.
              type: string
            tlsSecretName:
              description: Name of the Secret object that holds the TLS certificates and key for Elasticsearch.
                Defaults to 'elasticsearch-es-cert'.
            resetIndex:
              description: Reset the ElasticSearch index on load. Defaults to 'false'.
              type: boolean
            serviceType:
              description: The service type for this smart gateway. One of 'metrics' or 'events'. Defaults to 'metrics'.
              type: string
            exporterHost:
              description: Metrics URL for Prometheus to export. Defaults to "0.0.0.0".
              type: string
            exporterPort:
              description: Metrics port for Prometheus to export. Defaults to 8081.
              type: integer
            cpuStats:
              description: Include CPU usage info in http requests (degrades performance). Defaults to 'false'.
              type: boolean
            dataCount:
              description: Stop after receiving this many messages in total (-1 forever). Defaults to '-1'.
              type: integer
            debug:
              description: Enable verbose debugging statements. Defaults to 'false'.
              type: boolean
            prefetch:
              description: Number of messages that we can prefetch from AMQP 1.x. By enabling prefetching, the smart gateway won't need to
                request every message individually from the AMQP bus, resulting in a round trip for every request between sender and receiver.
                To avoid the round trip for every message, the use of prefetch can be used to allow the receiver to request messages be sent
                in anticipation of them being sent to us.
              type: integer
            containerImagePath:
              description: Path to the container image this Operator will deploy. Value is defined as the standard registry/image_name:tag
                format.
              type: string
            useTimestamp:
              description: Use the source timestamp (time when data was collected) rather than let Prometheus write when the data was 
                scraped for that metric.
              type: boolean
        status:
          description: Status results of an instance of Smart Gateway
          properties:
            conditions:
              description: The resulting conditions when a Smart Gateway is instantiated
              items:
                properties:
                  status:
                    type: string
                  type:
                    type: string
                  reason:
                    type: string
                  lastTransitionTime:
                    type: string
                type: object
              type: array
          type: object
