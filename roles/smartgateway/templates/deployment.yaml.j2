apiVersion: apps/v1
kind: Deployment
metadata:
  name: '{{ meta.name }}-smartgateway'
  namespace: '{{ meta.namespace }}'
spec:
  replicas: {{ size }}
  progressDeadlineSeconds: 600
  revisionHistoryLimit: 10
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 50%
    type: RollingUpdate
  selector:
    matchLabels:
      app: smart-gateway
      smart-gateway: '{{ meta.name }}'
  template:
    metadata:
      labels:
        app: smart-gateway
        smart-gateway: '{{ meta.name }}'
    spec:
      containers:
{% if (service_type == 'metrics') and (amqpDataSource == 'collectd') %}
      - name: bridge
        image: '{{ bridge_container_image_path }}'
        args:
        - --amqp_url
        - amqp://{{ amqp_url | default('messaging-internal-' + meta.name + '.' + meta.namespace + '.svc:5672/collectd/telemetry') }}
        - --verbose
        - --block
        - --stat_period
        - "60"
        - --rbc
        - "15000"
        volumeMounts:
        - mountPath: /tmp
          name: socket-dir
      - name: smart-gateway
        image: '{{ metrics_container_image_path }}'
        args:
        - -promhost
        - 0.0.0.0
        - unix
        volumeMounts:
        - mountPath: /tmp
          name: socket-dir
{% else %}
      - name: smart-gateway
        image: '{{ events_container_image_path }}'
        volumeMounts:
        - name: sg-config
          mountPath: /config
{%   if service_type == 'events' %}
        - name: elastic-certs
          mountPath: /config/certs
{%   endif %}
        args:
          - '-config=/config/smartgateway_config.json'
          - '-uname=$(MY_POD_NAME)'
          - '-servicetype={{ service_type }}'
        env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
        ports:
        - name: "{{ service_type }}"
          containerPort: 8081
      volumes:
{%   if (service_type == 'metrics') and (amqpDataSource == 'collectd') %}
      - name: socket-dir
        emptyDir: {}
{%   endif %}
      - name: sg-config
        configMap:
          name: "{{ meta.name }}-smartgateway"
{%   if service_type == 'events' %}
      - name: elastic-certs
        secret:
          secretName: {{ tls_secret_name }}
{%   endif %}
{% endif %}